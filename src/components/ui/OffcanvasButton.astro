---
const { title, uniqueId } = Astro.props;

---

<div class="text-center">
  <button class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800" type="button" data-drawer-target={uniqueId} data-drawer-show={uniqueId} data-drawer-placement="bottom" aria-controls={uniqueId}>
    {title}
  </button>
</div>

<div id={uniqueId}  class="fixed h-[95vh] rounded-t-3xl bottom-0 left-0 right-0 z-40 w-full p-4 overflow-y-auto bg-white dark:bg-gray-800 translate-y-full transition-transform duration-1000 ease-in-out shadow-xl 2xl:w-9/12 2xl:left-52" tabindex="-1" aria-labelledby="drawer-bottom-label">
  <h5 id={`${uniqueId}-label`} class="inline-flex items-center mb-4 text-base font-semibold text-gray-500 dark:text-gray-400">
    <svg class="w-4 h-4 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
      <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
    </svg> Bottom drawer
  </h5>
  <button type="button" data-drawer-hide={uniqueId} aria-controls={uniqueId} class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-4 end-4 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white">
    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
    </svg>
    <span class="sr-only">Close menu</span>
  </button>
  <p class="max-w-lg mb-6 text-sm text-gray-500 dark:text-gray-400">
  <slot />
  </p>
  <a href="#" class="px-4 py-2 me-2 text-sm font-medium text-center text-gray-900 bg-white border border-gray-200 rounded-lg focus:outline-none hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">Learn more</a>
  <a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">
    Get access 
    <svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
    </svg>
  </a>
</div>


<style>
    @keyframes slideUp {
      0% {
        transform: translateY(100%);
        opacity: 0;
      }
      20% {
        opacity: 1;
      }
      100% {
        transform: translateY(0);
        opacity: 1;
      }
    }
  
    .drawer-enter {
      animation: slideUp 1s cubic-bezier(0.22, 1, 0.36, 1) forwards;
    }
  </style>

<script>
  import { Drawer } from 'flowbite';
  
  document.addEventListener('astro:page-load', () => {
    const drawerElements = document.querySelectorAll('[id^=""]');
    
    drawerElements.forEach($targetEl => {
      const options = {
        placement: 'bottom',
        backdrop: true,
        bodyScrolling: false,
        edge: false,
        edgeOffset: '',
        backdropClasses: 'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-30'
      };

      if ($targetEl) {
        const drawer = new Drawer($targetEl, options);
        
        $targetEl.addEventListener('show.drawer', () => {
          $targetEl.style.transform = 'translateY(0)';
          $targetEl.classList.add('drawer-enter');
        });

        $targetEl.addEventListener('hide.drawer', () => {
          $targetEl.style.transform = 'translateY(100%)';
          $targetEl.classList.remove('drawer-enter');
        });

        $targetEl.addEventListener('hidden.drawer', () => {
          $targetEl.style.transform = '';
        });
      }
    });
  });
</script>


